/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-05-08 12:25:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page.teacher;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.springframework.web.context.annotation.SessionScope;

public final class t_002dlaboratory_002dinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.springframework.web.context.annotation.SessionScope");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table id=\"lab-table\" style=\"width: 100%;height:100%;\" />\r\n");
      out.write("\t<div id=\"lab-tb\">\r\n");
      out.write("\t\t<a href=\"javascript:void(0);\" data-options=\"iconCls:'icon-add'\"\r\n");
      out.write("\t\t\tclass=\"easyui-linkbutton\" onclick=\"orderLab()\">预约</a> &nbsp;实验室名:\r\n");
      out.write("\t\t<div id=\"search-lab-name\" prompt=\"实验室名字...\"\r\n");
      out.write("\t\t\tclass=\"easyui-textbox\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t&nbsp; <a href=\"javascript:void(0);\" data-options=\"iconCls:'icon-search'\"\r\n");
      out.write("\t\t\tid=\"lab-search-btn\" class=\"easyui-linkbutton\">搜索</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 增加的提示框 -->\r\n");
      out.write("\t<div id=\"lab-dialog\" class=\"easyui-dialog\"\r\n");
      out.write("\t\tdata-options=\"closed:true,iconCls:'icon-save'\"\r\n");
      out.write("\t\tstyle=\"width: 350px; height: 420px; padding: 10px;\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t$(\"#lab-table\").datagrid({\r\n");
      out.write("\t\t\t\ttitle : \"实验室信息表\",\r\n");
      out.write("\t\t\t\turl : \"/laboratoryweb/getPagerLaboratorys\",\r\n");
      out.write("\t\t\t\tpagination : true,\r\n");
      out.write("\t\t\t\tpageSize : 14,\r\n");
      out.write("\t\t\t\tpageList : [ 14, 50, 100 ],\r\n");
      out.write("\t\t\t\tcolumns : [ [ {\r\n");
      out.write("\t\t\t\t\tfield : \"laboratoryPKID\",\r\n");
      out.write("\t\t\t\t\thidden : true,\r\n");
      out.write("\t\t\t\t\ttitle : \"laboratoryPKID\",\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"laboratoryId\",\r\n");
      out.write("\t\t\t\t\ttitle : \"实验室编号\",\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"laboratoryName\",\r\n");
      out.write("\t\t\t\t\ttitle : \"实验室名字\",\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"laboratorySitNum\",\r\n");
      out.write("\t\t\t\t\ttitle : \"实验室座位数量\",\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"laboratoryStatus\",\r\n");
      out.write("\t\t\t\t\ttitle : \"实验室状态\",\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, ] ],\r\n");
      out.write("\t\t\t\tstriped : true,\r\n");
      out.write("\t\t\t\ttoolbar : \"#lab-tb\",\r\n");
      out.write("\t\t\t\tsingleSelect:true\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#lab-search-btn\").click(\r\n");
      out.write("\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\tvar laboratoryName = $(\"#search-lab-name\")\r\n");
      out.write("\t\t\t\t\t\t\t\t.textbox(\"getValue\");\r\n");
      out.write("\t\t\t\t\t\tvar queryParam = $(\"#lab-table\").datagrid(\r\n");
      out.write("\t\t\t\t\t\t\t\t\"options\").queryParams;\r\n");
      out.write("\t\t\t\t\t\tqueryParam.laboratoryName = laboratoryName;\r\n");
      out.write("\t\t\t\t\t\t$(\"#lab-table\").datagrid(\"load\");\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tfunction orderLab() {\r\n");
      out.write("\t\t\tvar rows = $(\"#lab-table\").datagrid(\"getSelections\");\r\n");
      out.write("\t\t\tif (rows.length != 1) {\r\n");
      out.write("\t\t\t\t$.messager.Alert(\"提示\", \"请选择一条信息\", \"info\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tvar laboratory = rows[0];\r\n");
      out.write("\t\t\t\tvar data = {\r\n");
      out.write("\t\t\t\t\t\"labId\" : laboratory[\"laboratoryPKID\"],\r\n");
      out.write("\t\t\t\t\t\"laboratoryName\" : laboratory[\"laboratoryName\"],\r\n");
      out.write("\t\t\t\t\t\"laboratoryId\" : laboratory[\"laboratoryId\"],\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\tasync : true,\r\n");
      out.write("\t\t\t\t\tdata : data,\r\n");
      out.write("\t\t\t\t\turl : \"/laboratoryweb/saveOrderData\",\r\n");
      out.write("\t\t\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\tif (data != \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\tAlert(\"系统异常,请重试\");\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t$('#lab-dialog').dialog('refresh',\r\n");
      out.write("\t\t\t\t\t\t\t'/laboratoryweb/teacherOrder');\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#lab-dialog\").dialog({\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : \"预约实验室\",\r\n");
      out.write("\t\t\t\t\t\t\t\tclosed : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tcache : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tbuttons : [ //按钮\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext : \"确定\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\ticonCls : \"icon-ok\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\thandler : laboratory_order\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext : '取消',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ticonCls : \"icon-cancel\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#lab-dialog\").dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction laboratory_order() {\r\n");
      out.write("\t\t\tdoAjaxOrder(\"/laboratoryweb/orderLaboratory\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction doAjaxOrder(param) {\r\n");
      out.write("\t\t\tvar experProject = $(\"#experProject\").val();\r\n");
      out.write("\t\t\tvar laboratoryId = $(\"#laboratoryId\").val();\r\n");
      out.write("\t\t\tvar stuClass = $(\"#stuClass\").val();\r\n");
      out.write("\t\t\tvar orderTimeSectionId = $(\"#orderTimeSectionId\").val();\r\n");
      out.write("\t\t\tvar orderDay = $(\"#orderDay\").val();\r\n");
      out.write("\t\t\tif (orderDay == \"\" || orderTimeSectionId == \"\") {\r\n");
      out.write("\t\t\t\tAlert(\"请填写完整信息\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar loadData = {\r\n");
      out.write("\t\t\t\t\"experProjectId\" : experProject,\r\n");
      out.write("\t\t\t\t\"laboratoryId\" : laboratoryId,\r\n");
      out.write("\t\t\t\t\"stuClass\" : stuClass,\r\n");
      out.write("\t\t\t\t\"orderTimeSectionId\" : orderTimeSectionId,\r\n");
      out.write("\t\t\t\t\"orderDay\" : orderDay\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : param,\r\n");
      out.write("\t\t\t\tmethod : \"post\",\r\n");
      out.write("\t\t\t\tdata : loadData,\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\tif (data == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t$(\"#lab-dialog\").dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t\tAlert(\"预约成功,请留意批准信息.....\");\r\n");
      out.write("\t\t\t\t\t} else if (data == \"twrongday\") {\r\n");
      out.write("\t\t\t\t\t\tvar myDate = new Date;\r\n");
      out.write("\t\t\t\t\t\tvar year = myDate.getFullYear(); //获取当前年\r\n");
      out.write("\t\t\t\t\t\tvar mon = myDate.getMonth() + 1; //获取当前月\r\n");
      out.write("\t\t\t\t\t\tvar date = myDate.getDate();\r\n");
      out.write("\t\t\t\t\t\tAlert(\"日期应为:\" + year + \"-\" + mon + \"-\" + date + \"后的30天内\");\r\n");
      out.write("\t\t\t\t\t} else if(data == \"labForbidden\"){\r\n");
      out.write("\t\t\t\t\t\tAlert(\"实验室不可用\");\r\n");
      out.write("\t\t\t\t\t} else if(data == \"classordered\"||data == \"ordered\"){\r\n");
      out.write("\t\t\t\t\t\tAlert(\"实验室已被占用\");\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else if(data == \"forbidden\"){\r\n");
      out.write("\t\t\t\t\t\tAlert(\"账号被禁用,请联系管理员..\");\r\n");
      out.write("\t\t\t\t\t} else if(data == \"overStuNum\"){\r\n");
      out.write("\t\t\t\t\t\tAlert(\"班级人数超出!\");\r\n");
      out.write("\t\t\t\t\t} else{\r\n");
      out.write("\t\t\t\t\t\tAlert(\"系统异常,请重试..\");\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
