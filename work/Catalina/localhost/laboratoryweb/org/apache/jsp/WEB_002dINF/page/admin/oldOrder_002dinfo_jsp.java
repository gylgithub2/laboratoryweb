/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-04-11 09:32:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class oldOrder_002dinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<table id=\"old-order-table\" style=\"width: 100%;height:100%;\" />\r\n");
      out.write("\t<div id=\"old-order-tb\">\r\n");
      out.write("\t\t&nbsp;<a href=\"javascript:void(0);\"\r\n");
      out.write("\t\t\tdata-options=\"iconCls:'icon-cancel'\" id=\"oldor-deletebutton\"\r\n");
      out.write("\t\t\tclass=\"easyui-linkbutton\" onclick=\"deleteOrder()\">删除</a> <a\r\n");
      out.write("\t\t\thref=\"javascript:void(0);\" data-options=\"iconCls:'icon-reload'\"\r\n");
      out.write("\t\t\tid=\"oldor-cancel-btn\" class=\"easyui-linkbutton\" onclick=\"cancel()\">刷新</a>\r\n");
      out.write("\t\t&nbsp;\r\n");
      out.write("\t\t<div id=\"oldor-searcherId\" class=\"easyui-numberbox\"\r\n");
      out.write("\t\t\tdata-options=\"prompt:'输入用户id或者实验室id'\" style=\"width: 150px;\"></div>\r\n");
      out.write("\t\t&nbsp; <a href=\"javascript:void(0);\"\r\n");
      out.write("\t\t\tdata-options=\"iconCls:'icon-search'\" id=\"oldor-seacher-btn\"\r\n");
      out.write("\t\t\tclass=\"easyui-linkbutton\">查询</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t$(\"#old-order-table\").datagrid({\r\n");
      out.write("\t\t\t\ttitle : \"预约信息表\",\r\n");
      out.write("\t\t\t\turl : \"/laboratoryweb/getPagerOldOrders\",\r\n");
      out.write("\t\t\t\tpagination : true,\r\n");
      out.write("\t\t\t\tpageSize : 13,\r\n");
      out.write("\t\t\t\tpageList : [ 13, 50, 100 ],\r\n");
      out.write("\t\t\t\tcolumns : [ [ {\r\n");
      out.write("\t\t\t\t\tfield : \"ck\",\r\n");
      out.write("\t\t\t\t\tcheckbox : \"true\"\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"orderPKID\",\r\n");
      out.write("\t\t\t\t\thidden : true,\r\n");
      out.write("\t\t\t\t\ttitle : \"orderPKID\"\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"userId\",\r\n");
      out.write("\t\t\t\t\ttitle : \"预约人\",\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"roomId\",\r\n");
      out.write("\t\t\t\t\ttitle : \"实验室编号\",\r\n");
      out.write("\t\t\t\t\twidth : 80\r\n");
      out.write("\t\t\t\t},  {\r\n");
      out.write("\t\t\t\t\tfield : \" \",\r\n");
      out.write("\t\t\t\t\ttitle : \"实验室名称\",\r\n");
      out.write("\t\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t\t\tformatter:function(value, row, index){\r\n");
      out.write("\t\t\t\t\t\tvar var1;\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\tasync : false,\r\n");
      out.write("\t\t\t\t\t\t\turl : \"/laboratoryweb/getLabName\",\r\n");
      out.write("\t\t\t\t\t\t\tmethod : \"get\",\r\n");
      out.write("\t\t\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\"labId\" : row.roomId\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar1 = data;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\treturn var1;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"orderTime\",\r\n");
      out.write("\t\t\t\t\ttitle : \"预约申请时间\",\r\n");
      out.write("\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\tfield : \"  \",\r\n");
      out.write("\t\t\t\t\ttitle : \"预约时间\",\r\n");
      out.write("\t\t\t\t\twidth : 350,\r\n");
      out.write("\t\t\t\t\tformatter : function(value, row, index) {\r\n");
      out.write("\t\t\t\t\t\treturn row.startTime + \"~\" + row.endTime;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} ] ],\r\n");
      out.write("\t\t\t\tstriped : true,\r\n");
      out.write("\t\t\t\ttoolbar : \"#old-order-tb\",\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#oldor-seacher-btn\").click(\r\n");
      out.write("\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\tvar orderId = $(\"#oldor-searcherId\").numberbox(\r\n");
      out.write("\t\t\t\t\t\t\t\t\"getValue\");\r\n");
      out.write("\t\t\t\t\t\tvar queryParam = $(\"#old-order-table\").datagrid(\r\n");
      out.write("\t\t\t\t\t\t\t\t\"options\").queryParams;\r\n");
      out.write("\t\t\t\t\t\tqueryParam.id = orderId;\r\n");
      out.write("\t\t\t\t\t\t$(\"#old-order-table\").datagrid(\"load\");\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tfunction deleteOrder() {\r\n");
      out.write("\t\t\tvar rows = $(\"#old-order-table\").datagrid(\"getSelections\");\r\n");
      out.write("\t\t\tif (rows.length >= 1) {\r\n");
      out.write("\t\t\t\t$.messager.confirm(\"提示\", \"确认该条记录?\", function(result) {\r\n");
      out.write("\t\t\t\t\tif (result) {\r\n");
      out.write("\t\t\t\t\t\tvar ids = [];\r\n");
      out.write("\t\t\t\t\t\t$(rows).each(function() {\r\n");
      out.write("\t\t\t\t\t\t\tids.push(this.orderPKID);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\turl : \"/laboratoryweb/deleteOrder\",\r\n");
      out.write("\t\t\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\t\t\tids : ids\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (data == \"success\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#old-order-table\").datagrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"请重试！\");\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$.messager.alert(\"提示\", \"请至少选择一条信息！\", \"info\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction cancel() {\r\n");
      out.write("\t\t\t$(\"#old-order-table\").datagrid(\"rejectChanges\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
